@model BookShop.Data.Author

@{
    ViewBag.Title =
    Model.FirstName + " " + Model.LastNameForDisplay;
}

<div class="row">
    <div class="col-md-12">
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Home", "Index", "Home")
            </li>
            <li>
                @ViewBag.Title
            </li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h2>
            @(Model.FirstName + " " + Model.LastNameForDisplay)
        </h2>
    </div>
</div>
<div id="showVote">
    <div class="col-md-12" style="padding: 0;">
        @if (Model.AuthorReviews.Any())
            {
            @Html.Action("ShowVote", "AuthorReview", new { authorId = Model.Id })
        }
    </div>
</div>

@if (Model.Description != null)
{
    <div class="row">
        <div class="col-md-12">
            @Model.Description
        </div>
    </div>
}

@if (Model.Books.Any())
{
    <div class="row" style="padding: 15px;">
        <div class="col-md-12 myBorder">
            @foreach (var book in Model.Books)
            {
                var category = book.SubMainCategories.First();
                <a href=@Url.Action("GetSingleBook", "Books", new { mainCategoryName = category.MainCategory.Name, subMainCategoryName = category.Name, id = book.Id, title = book.Title })>
                    <img src=@book.Image class="img-responsive img-thumbnail" alt="@book.TitleForDisplay" style="width: 20%; height: 20%;" />
                </a>
            }
        </div>
    </div>
}

<div class="row" style="padding: 15px;">
    <div class="col-md-12 text-right">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addAuthorReviewModal">
            Dodaj recenzje
        </button>
    </div>
</div>
<div class="row">
    <div class="col-md-12" style="padding: 15px;">
        <div id="authorReviews">
            @Html.Action("GetAllByAuthorId", "AuthorReview", new { authorId = Model.Id })
        </div>
    </div>
</div>

@Html.Action("AddAuthorReviewModal", "AuthorReview", new { authorId = Model.Id, returnUrl = Request.Url?.PathAndQuery })
@Html.Action("EditAuthorReviewModal", "AuthorReview")
@Html.Action("DeleteAuthorReviewModal", "AuthorReview")

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/bundles/tooltip")
    @Scripts.Render("~/bundles/openAuthorReviewModals")
    @Scripts.Render("~/bundles/author")
    <script type="text/javascript">
        $.validator.setDefaults({
            ignore: []
        });
    </script>
    <script>
        function updateAuthorReviews() {
            var url = "/AuthorReview/GetAllByAuthorId?authorId=" + @Html.Raw(Model.Id);
            $.get(url,
                function(result) {
                    $('#authorReviews').html(result);
                });
        }

        function updateVotes(id) {
            var success = $('#' + id + '> div.row > div.col-md-12').find('h4.text-success');
            if (success.length > 0) {
                $.get('/AuthorReview/ShowVote?authorId=' + @Html.Raw(Model.Id),
                    function(data) {
                        $('#showVote').html(data);
                    });
            }
        }
    </script>
}